# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build

env:
  ANGULAR_IMAGE_NAME: social-login-app-client
  ANGULAR_CONTAINER_NAME: social-login-app-client
  ANGULAR_DEPLOYMENT_NAME: social-login-app-client
  SPRING_BOOT_IMAGE_NAME: social-login-app-server
  SPRING_BOOT_CONTAINER_NAME: social-login-app-server
  SPRING_BOOT_DEPLOYMENT_NAME: social-login-app-server
jobs:
 
  build:
    name: Build, push, and deploy
    runs-on: ubuntu-latest
    steps:
 
    - name: Checkout main
      uses: actions/checkout@main
 
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
 
    - name: Provide permission to run mvnw
      run: chmod +x ./spring-boot-oauth2-social-login/mvnw
 
    - name: Build and push Angular Image
      id: angular_docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./angular-11-social-login
        file: ./angular-11-social-login/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.ANGULAR_IMAGE_NAME }}:${{ github.sha }}
 
    - name: Build and push Spring Boot Image
      id: spring-boot-docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./spring-boot-oauth2-social-login
        file: ./spring-boot-oauth2-social-login/Dockerfile
        push: true
        tags:  ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.SPRING_BOOT_IMAGE_NAME }}:${{ github.sha }}
 
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
 
    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-1-20-2-do-0-blr1-1619022201280
 
    # Deploy Angular & Spring Boot Docker image to the DigitalOcean kubernetes cluster
    - name: Deploy
      run: |-
        kubectl set image deployment/${{env.ANGULAR_DEPLOYMENT_NAME}} ${{env.ANGULAR_CONTAINER_NAME}}=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.ANGULAR_IMAGE_NAME }}:${{ github.sha }}
        kubectl set image deployment/${{env.SPRING_BOOT_DEPLOYMENT_NAME}} ${{ env.SPRING_BOOT_CONTAINER_NAME}}=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.SPRING_BOOT_IMAGE_NAME }}:${{ github.sha }}
        kubectl rollout status deployment/${{env.ANGULAR_DEPLOYMENT_NAME}}
        kubectl rollout status deployment/${{env.SPRING_BOOT_DEPLOYMENT_NAME}}
        kubectl get services -o wide